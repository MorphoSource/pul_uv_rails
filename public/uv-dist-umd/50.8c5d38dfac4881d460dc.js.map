{"version":3,"sources":["webpack://UV/./node_modules/@universalviewer/aleph/dist/esm-es5/index-fbd2c40b.js","webpack://UV/./node_modules/@universalviewer/aleph/dist/esm-es5/ion-infinite-scroll-content-ios.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;;;;;;;;;;;;;AC9GlC;AAAA;AAAA;AAAA;AAAuG;AAC1C;AAC7D;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA;AACA;AACA,uBAAuB,2DAAU;AACjC,kCAAkC,mDAAM,+BAA+B,mDAAM;AAC7E;AACA;AACA;AACA;AACA,mBAAmB,2DAAU;AAC7B,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,gBAAgB;AACzC;AACA;AACA;AACA,qBAAqB,EAAE,2DAAC,SAAS,4BAA4B,0BAA0B,2DAAC,SAAS,oCAAoC,EAAE,2DAAC,iBAAiB,4BAA4B,0BAA0B,2DAAC,SAAS,4CAA4C,4DAAiB,oBAAoB;AAC1S;AACA;AACA,0BAA0B,qCAAqC,oBAAoB,aAAa,0BAA0B,sBAAsB,qBAAqB,uBAAuB,gBAAgB,kBAAkB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,kBAAkB,cAAc,eAAe,aAAa,mBAAmB,aAAa,WAAW,uBAAuB,iBAAiB,kBAAkB,eAAe,gBAAgB,6FAA6F,uBAAuB,kBAAkB,mBAAmB,0BAA0B,yBAAyB,wBAAwB,wBAAwB,uEAAuE,cAAc,oDAAoD,qCAAqC,oPAAoP,sCAAsC,0OAA0O,oCAAoC,EAAE,EAAE;AACz8C;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC+D","file":"50.8c5d38dfac4881d460dc.js","sourcesContent":["/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\r\nvar sanitizeDOMString = function (untrustedString) {\r\n    try {\r\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\r\n            return untrustedString;\r\n        }\r\n        /**\r\n         * Create a document fragment\r\n         * separate from the main DOM,\r\n         * create a div to do our work in\r\n         */\r\n        var documentFragment_1 = document.createDocumentFragment();\r\n        var workingDiv = document.createElement('div');\r\n        documentFragment_1.appendChild(workingDiv);\r\n        workingDiv.innerHTML = untrustedString;\r\n        /**\r\n         * Remove any elements\r\n         * that are blocked\r\n         */\r\n        blockedTags.forEach(function (blockedTag) {\r\n            var getElementsToRemove = documentFragment_1.querySelectorAll(blockedTag);\r\n            for (var elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\r\n                var element = getElementsToRemove[elementIndex];\r\n                if (element.parentNode) {\r\n                    element.parentNode.removeChild(element);\r\n                }\r\n                else {\r\n                    documentFragment_1.removeChild(element);\r\n                }\r\n                /**\r\n                 * We still need to sanitize\r\n                 * the children of this element\r\n                 * as they are left behind\r\n                 */\r\n                var childElements = getElementChildren(element);\r\n                /* tslint:disable-next-line */\r\n                for (var childIndex = 0; childIndex < childElements.length; childIndex++) {\r\n                    sanitizeElement(childElements[childIndex]);\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * Go through remaining elements and remove\r\n         * non-allowed attribs\r\n         */\r\n        // IE does not support .children on document fragments, only .childNodes\r\n        var dfChildren = getElementChildren(documentFragment_1);\r\n        /* tslint:disable-next-line */\r\n        for (var childIndex = 0; childIndex < dfChildren.length; childIndex++) {\r\n            sanitizeElement(dfChildren[childIndex]);\r\n        }\r\n        // Append document fragment to div\r\n        var fragmentDiv = document.createElement('div');\r\n        fragmentDiv.appendChild(documentFragment_1);\r\n        // First child is always the div we did our work in\r\n        var getInnerDiv = fragmentDiv.querySelector('div');\r\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\r\nvar sanitizeElement = function (element) {\r\n    // IE uses childNodes, so ignore nodes that are not elements\r\n    if (element.nodeType && element.nodeType !== 1) {\r\n        return;\r\n    }\r\n    for (var i = element.attributes.length - 1; i >= 0; i--) {\r\n        var attribute = element.attributes.item(i);\r\n        var attributeName = attribute.name;\r\n        // remove non-allowed attribs\r\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\r\n            element.removeAttribute(attributeName);\r\n            continue;\r\n        }\r\n        // clean up any allowed attribs\r\n        // that attempt to do any JS funny-business\r\n        var attributeValue = attribute.value;\r\n        /* tslint:disable-next-line */\r\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\r\n            element.removeAttribute(attributeName);\r\n        }\r\n    }\r\n    /**\r\n     * Sanitize any nested children\r\n     */\r\n    var childElements = getElementChildren(element);\r\n    /* tslint:disable-next-line */\r\n    for (var i = 0; i < childElements.length; i++) {\r\n        sanitizeElement(childElements[i]);\r\n    }\r\n};\r\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\r\nvar getElementChildren = function (el) {\r\n    return (el.children != null) ? el.children : el.childNodes;\r\n};\r\nvar allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\r\nvar blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\r\nexport { sanitizeDOMString as s };\r\n","import { r as registerInstance, f as getIonMode, i as config, h, H as Host } from './core-684c60cc.js';\r\nimport { s as sanitizeDOMString } from './index-fbd2c40b.js';\r\nvar InfiniteScrollContent = /** @class */ (function () {\r\n    function class_1(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    class_1.prototype.componentDidLoad = function () {\r\n        if (this.loadingSpinner === undefined) {\r\n            var mode = getIonMode(this);\r\n            this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\r\n        }\r\n    };\r\n    class_1.prototype.render = function () {\r\n        var _a;\r\n        var mode = getIonMode(this);\r\n        return (h(Host, { class: (_a = {},\r\n                _a[mode] = true,\r\n                // Used internally for styling\r\n                _a[\"infinite-scroll-content-\" + mode] = true,\r\n                _a) }, h(\"div\", { class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { name: this.loadingSpinner }))), this.loadingText && (h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(this.loadingText) })))));\r\n    };\r\n    Object.defineProperty(class_1, \"style\", {\r\n        get: function () { return \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600,#666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line{stroke:var(--ion-color-step-600,#666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600,#666)}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return class_1;\r\n}());\r\nexport { InfiniteScrollContent as ion_infinite_scroll_content };\r\n"],"sourceRoot":""}