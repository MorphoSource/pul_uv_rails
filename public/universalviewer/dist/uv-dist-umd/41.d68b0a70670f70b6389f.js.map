{"version":3,"sources":["webpack://UV/./node_modules/@universalviewer/aleph/dist/esm-es5/haptic-e2bb9344.js","webpack://UV/./node_modules/@universalviewer/aleph/dist/esm-es5/ion-reorder-group.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiH;;;;;;;;;;;;;AC1CjH;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AAC6H;AACN;AACvH;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gLAA6B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,+BAA+B,EAAE;AAC1F,oDAAoD,0BAA0B,EAAE;AAChF,mDAAmD,yBAAyB,EAAE;AAC9E,gDAAgD,sBAAsB,EAAE;AACxE,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,QAAQ,6DAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2DAAU;AAC7B,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,gBAAgB;AACzC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,0BAA0B,QAAQ,2DAAU,OAAO,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,gCAAgC,yCAAyC,iCAAiC,yBAAyB,+CAA+C,sBAAsB,iBAAiB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,6BAA6B,cAAc,oBAAoB,YAAY,mBAAmB,sBAAsB,kBAAkB,gDAAgD,wBAAwB,gBAAgB,kBAAkB,kBAAkB,kCAAkC,0BAA0B,2CAA2C,mCAAmC,WAAW,YAAY,2CAA2C,gCAAgC,wBAAwB,EAAE,EAAE;AACl1B;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C","file":"41.d68b0a70670f70b6389f.js","sourcesContent":["/**\r\n * Check to see if the Haptic Plugin is available\r\n * @return Returns `true` or false if the plugin is available\r\n */\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nvar hapticSelection = function () {\r\n    var engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.selection();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nvar hapticSelectionStart = function () {\r\n    var engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionStart();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nvar hapticSelectionChanged = function () {\r\n    var engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionChanged();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nvar hapticSelectionEnd = function () {\r\n    var engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionEnd();\r\n    }\r\n};\r\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { r as registerInstance, c as createEvent, f as getIonMode, h, d as getElement, H as Host } from './core-684c60cc.js';\r\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, c as hapticSelectionEnd } from './haptic-e2bb9344.js';\r\nvar ReorderGroup = /** @class */ (function () {\r\n    function class_1(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.lastToIndex = -1;\r\n        this.cachedHeights = [];\r\n        this.scrollElTop = 0;\r\n        this.scrollElBottom = 0;\r\n        this.scrollElInitial = 0;\r\n        this.containerTop = 0;\r\n        this.containerBottom = 0;\r\n        this.state = 0 /* Idle */;\r\n        /**\r\n         * If `true`, the reorder will be hidden.\r\n         */\r\n        this.disabled = true;\r\n        this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\r\n    }\r\n    class_1.prototype.disabledChanged = function () {\r\n        if (this.gesture) {\r\n            this.gesture.setDisabled(this.disabled);\r\n        }\r\n    };\r\n    class_1.prototype.connectedCallback = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contentEl, _a, _b;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        contentEl = this.el.closest('ion-content');\r\n                        if (!contentEl) return [3 /*break*/, 2];\r\n                        _a = this;\r\n                        return [4 /*yield*/, contentEl.getScrollElement()];\r\n                    case 1:\r\n                        _a.scrollEl = _c.sent();\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        _b = this;\r\n                        return [4 /*yield*/, import('./index-14bae62d.js')];\r\n                    case 3:\r\n                        _b.gesture = (_c.sent()).createGesture({\r\n                            el: this.el,\r\n                            gestureName: 'reorder',\r\n                            gesturePriority: 110,\r\n                            threshold: 0,\r\n                            direction: 'y',\r\n                            passive: false,\r\n                            canStart: function (detail) { return _this.canStart(detail); },\r\n                            onStart: function (ev) { return _this.onStart(ev); },\r\n                            onMove: function (ev) { return _this.onMove(ev); },\r\n                            onEnd: function () { return _this.onEnd(); },\r\n                        });\r\n                        this.disabledChanged();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.disconnectedCallback = function () {\r\n        this.onEnd();\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Completes the reorder operation. Must be called by the `ionItemReorder` event.\r\n     *\r\n     * If a list of items is passed, the list will be reordered and returned in the\r\n     * proper order.\r\n     *\r\n     * If no parameters are passed or if `true` is passed in, the reorder will complete\r\n     * and the item will remain in the position it was dragged to. If `false` is passed,\r\n     * the reorder will complete and the item will bounce back to its original position.\r\n     *\r\n     * @param listOrReorder A list of items to be sorted and returned in the new order or a\r\n     * boolean of whether or not the reorder should reposition the item.\r\n     */\r\n    class_1.prototype.complete = function (listOrReorder) {\r\n        return Promise.resolve(this.completeSync(listOrReorder));\r\n    };\r\n    class_1.prototype.canStart = function (ev) {\r\n        if (this.selectedItemEl || this.state !== 0 /* Idle */) {\r\n            return false;\r\n        }\r\n        var target = ev.event.target;\r\n        var reorderEl = target.closest('ion-reorder');\r\n        if (!reorderEl) {\r\n            return false;\r\n        }\r\n        var item = findReorderItem(reorderEl, this.el);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        ev.data = item;\r\n        return true;\r\n    };\r\n    class_1.prototype.onStart = function (ev) {\r\n        ev.event.preventDefault();\r\n        var item = this.selectedItemEl = ev.data;\r\n        var heights = this.cachedHeights;\r\n        heights.length = 0;\r\n        var el = this.el;\r\n        var children = el.children;\r\n        if (!children || children.length === 0) {\r\n            return;\r\n        }\r\n        var sum = 0;\r\n        for (var i = 0; i < children.length; i++) {\r\n            var child = children[i];\r\n            sum += child.offsetHeight;\r\n            heights.push(sum);\r\n            child.$ionIndex = i;\r\n        }\r\n        var box = el.getBoundingClientRect();\r\n        this.containerTop = box.top;\r\n        this.containerBottom = box.bottom;\r\n        if (this.scrollEl) {\r\n            var scrollBox = this.scrollEl.getBoundingClientRect();\r\n            this.scrollElInitial = this.scrollEl.scrollTop;\r\n            this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\r\n            this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\r\n        }\r\n        else {\r\n            this.scrollElInitial = 0;\r\n            this.scrollElTop = 0;\r\n            this.scrollElBottom = 0;\r\n        }\r\n        this.lastToIndex = indexForItem(item);\r\n        this.selectedItemHeight = item.offsetHeight;\r\n        this.state = 1 /* Active */;\r\n        item.classList.add(ITEM_REORDER_SELECTED);\r\n        hapticSelectionStart();\r\n    };\r\n    class_1.prototype.onMove = function (ev) {\r\n        var selectedItem = this.selectedItemEl;\r\n        if (!selectedItem) {\r\n            return;\r\n        }\r\n        // Scroll if we reach the scroll margins\r\n        var scroll = this.autoscroll(ev.currentY);\r\n        // // Get coordinate\r\n        var top = this.containerTop - scroll;\r\n        var bottom = this.containerBottom - scroll;\r\n        var currentY = Math.max(top, Math.min(ev.currentY, bottom));\r\n        var deltaY = scroll + currentY - ev.startY;\r\n        var normalizedY = currentY - top;\r\n        var toIndex = this.itemIndexForTop(normalizedY);\r\n        if (toIndex !== this.lastToIndex) {\r\n            var fromIndex = indexForItem(selectedItem);\r\n            this.lastToIndex = toIndex;\r\n            hapticSelectionChanged();\r\n            this.reorderMove(fromIndex, toIndex);\r\n        }\r\n        // Update selected item position\r\n        selectedItem.style.transform = \"translateY(\" + deltaY + \"px)\";\r\n    };\r\n    class_1.prototype.onEnd = function () {\r\n        var selectedItemEl = this.selectedItemEl;\r\n        this.state = 2 /* Complete */;\r\n        if (!selectedItemEl) {\r\n            this.state = 0 /* Idle */;\r\n            return;\r\n        }\r\n        var toIndex = this.lastToIndex;\r\n        var fromIndex = indexForItem(selectedItemEl);\r\n        if (toIndex === fromIndex) {\r\n            this.completeSync();\r\n        }\r\n        else {\r\n            this.ionItemReorder.emit({\r\n                from: fromIndex,\r\n                to: toIndex,\r\n                complete: this.completeSync.bind(this)\r\n            });\r\n        }\r\n        hapticSelectionEnd();\r\n    };\r\n    class_1.prototype.completeSync = function (listOrReorder) {\r\n        var selectedItemEl = this.selectedItemEl;\r\n        if (selectedItemEl && this.state === 2 /* Complete */) {\r\n            var children = this.el.children;\r\n            var len = children.length;\r\n            var toIndex = this.lastToIndex;\r\n            var fromIndex = indexForItem(selectedItemEl);\r\n            if (toIndex !== fromIndex && (!listOrReorder || listOrReorder === true)) {\r\n                var ref = (fromIndex < toIndex)\r\n                    ? children[toIndex + 1]\r\n                    : children[toIndex];\r\n                this.el.insertBefore(selectedItemEl, ref);\r\n            }\r\n            if (Array.isArray(listOrReorder)) {\r\n                listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\r\n            }\r\n            for (var i = 0; i < len; i++) {\r\n                children[i].style['transform'] = '';\r\n            }\r\n            selectedItemEl.style.transition = '';\r\n            selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\r\n            this.selectedItemEl = undefined;\r\n            this.state = 0 /* Idle */;\r\n        }\r\n        return listOrReorder;\r\n    };\r\n    class_1.prototype.itemIndexForTop = function (deltaY) {\r\n        var heights = this.cachedHeights;\r\n        var i = 0;\r\n        // TODO: since heights is a sorted array of integers, we can do\r\n        // speed up the search using binary search. Remember that linear-search is still\r\n        // faster than binary-search for small arrays (<64) due CPU branch misprediction.\r\n        for (i = 0; i < heights.length; i++) {\r\n            if (heights[i] > deltaY) {\r\n                break;\r\n            }\r\n        }\r\n        return i;\r\n    };\r\n    /********* DOM WRITE ********* */\r\n    class_1.prototype.reorderMove = function (fromIndex, toIndex) {\r\n        var itemHeight = this.selectedItemHeight;\r\n        var children = this.el.children;\r\n        for (var i = 0; i < children.length; i++) {\r\n            var style = children[i].style;\r\n            var value = '';\r\n            if (i > fromIndex && i <= toIndex) {\r\n                value = \"translateY(\" + -itemHeight + \"px)\";\r\n            }\r\n            else if (i < fromIndex && i >= toIndex) {\r\n                value = \"translateY(\" + itemHeight + \"px)\";\r\n            }\r\n            style['transform'] = value;\r\n        }\r\n    };\r\n    class_1.prototype.autoscroll = function (posY) {\r\n        if (!this.scrollEl) {\r\n            return 0;\r\n        }\r\n        var amount = 0;\r\n        if (posY < this.scrollElTop) {\r\n            amount = -SCROLL_JUMP;\r\n        }\r\n        else if (posY > this.scrollElBottom) {\r\n            amount = SCROLL_JUMP;\r\n        }\r\n        if (amount !== 0) {\r\n            this.scrollEl.scrollBy(0, amount);\r\n        }\r\n        return this.scrollEl.scrollTop - this.scrollElInitial;\r\n    };\r\n    class_1.prototype.render = function () {\r\n        var _a;\r\n        var mode = getIonMode(this);\r\n        return (h(Host, { class: (_a = {},\r\n                _a[mode] = true,\r\n                _a['reorder-enabled'] = !this.disabled,\r\n                _a['reorder-list-active'] = this.state !== 0 /* Idle */,\r\n                _a) }));\r\n    };\r\n    Object.defineProperty(class_1.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"disabled\": [\"disabledChanged\"]\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(class_1, \"style\", {\r\n        get: function () { return \".reorder-list-active>*{-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none!important;transition:none!important;-webkit-box-shadow:0 0 10px rgba(0,0,0,.4);box-shadow:0 0 10px rgba(0,0,0,.4);opacity:.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translateZ(0);transform:translateZ(0)}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return class_1;\r\n}());\r\nvar indexForItem = function (element) {\r\n    return element['$ionIndex'];\r\n};\r\nvar findReorderItem = function (node, container) {\r\n    var parent;\r\n    while (node) {\r\n        parent = node.parentElement;\r\n        if (parent === container) {\r\n            return node;\r\n        }\r\n        node = parent;\r\n    }\r\n    return undefined;\r\n};\r\nvar AUTO_SCROLL_MARGIN = 60;\r\nvar SCROLL_JUMP = 10;\r\nvar ITEM_REORDER_SELECTED = 'reorder-selected';\r\nvar reorderArray = function (array, from, to) {\r\n    var element = array[from];\r\n    array.splice(from, 1);\r\n    array.splice(to, 0, element);\r\n    return array.slice();\r\n};\r\nexport { ReorderGroup as ion_reorder_group };\r\n"],"sourceRoot":""}