const t=window.aleph.h;class e{constructor(){this.transitioning=!1,this.tabs=[]}async componentWillLoad(){this.tabs=Array.from(this.el.querySelectorAll("ion-tab")),this.ionNavWillLoad.emit(),this.componentWillUpdate()}componentDidLoad(){this.initSelect()}componentDidUnload(){this.tabs.length=0,this.selectedTab=this.leavingTab=void 0}componentWillUpdate(){const t=this.el.querySelector("ion-tab-bar");t&&(t.selectedTab=this.selectedTab?this.selectedTab.tab:void 0)}onTabClicked(t){const{tab:e}=t.detail,i=this.tabs.find(t=>t.tab===e);i&&this.select(i)}async select(t){const e=await this.getTab(t);return!!this.shouldSwitch(e)&&(await this.setActive(e),this.tabSwitch(),!0)}async getTab(t){const e="string"==typeof t?this.tabs.find(e=>e.tab===t):t;return e||console.error(`tab with id: "${e}" does not exist`),e}getSelected(){return Promise.resolve(this.selectedTab?this.selectedTab.tab:void 0)}async initSelect(){await Promise.all(this.tabs.map(t=>t.componentOnReady())),await this.select(this.tabs[0])}setActive(t){return this.transitioning?Promise.reject("transitioning already happening"):(this.transitioning=!0,this.leavingTab=this.selectedTab,this.selectedTab=t,this.ionTabsWillChange.emit({tab:t.tab}),t.setActive())}tabSwitch(){const t=this.selectedTab,e=this.leavingTab;this.leavingTab=void 0,this.transitioning=!1,t&&e!==t&&(e&&(e.active=!1),this.ionTabsDidChange.emit({tab:t.tab}))}shouldSwitch(t){return void 0!==t&&t!==this.selectedTab&&!this.transitioning}render(){return[t("slot",{name:"top"}),t("div",{class:"tabs-inner"},t("slot",null)),t("slot",{name:"bottom"})]}static get is(){return"al-tabs"}static get encapsulation(){return"shadow"}static get properties(){return{doc:{context:"document"},el:{elementRef:!0},getSelected:{method:!0},getTab:{method:!0},select:{method:!0},selectedTab:{state:!0},tabs:{state:!0}}}static get events(){return[{name:"ionNavWillLoad",method:"ionNavWillLoad",bubbles:!0,cancelable:!0,composed:!0},{name:"ionTabsWillChange",method:"ionTabsWillChange",bubbles:!1,cancelable:!0,composed:!0},{name:"ionTabsDidChange",method:"ionTabsDidChange",bubbles:!1,cancelable:!0,composed:!0}]}static get listeners(){return[{name:"ionTabButtonClick",method:"onTabClicked"}]}static get style(){return":host{z-index:var(--z-index-page-container)}.tabs-inner{position:relative}"}}export{e as AlTabs};